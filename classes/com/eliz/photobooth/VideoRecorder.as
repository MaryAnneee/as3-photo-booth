package com.eliz.photobooth {	import flash.display.Sprite;	import flash.media.Video;	import flash.media.Camera;	import flash.events.SampleDataEvent;	import flash.media.Microphone;	import flash.media.Sound;	import flash.utils.ByteArray;	import com.zeropointnine.SimpleFlvWriter;	import flash.filesystem.*;	import com.adobe.audio.format.WAVWriter;	import flash.utils.*;	import flash.events.Event;	import flash.display.BitmapData;	import flash.events.NetStatusEvent;	import flash.net.NetConnection;	import flash.net.NetStream;	import com.eliz.photobooth.screenrecording.Screenrecording_VideoOnly;	import com.eliz.photobooth.screenrecording.Screenrecording_VideoSound;		public class VideoRecorder extends Sprite {		private var video:Video;		private var recordInterval:Number;		private var flvWriter:SimpleFlvWriter;		private var startTime:Number;		private var bitmapDataArray:Array;		private var nc:NetConnection;		private var ns:NetStream;				public function VideoRecorder(vid:Video) {			video = vid;			//connect();		}				private function connect():void {			nc = new NetConnection();			nc.connect("rtmp://localhost/oflaDemo");			nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);		}				private function netStatusHandler(e:NetStatusEvent):void {			var code:String = e.info.code;			trace("code = " + code);			if(code == "NetConnection.Connect.Success"){				ns = new NetStream(nc);        //plus other stuff if you need.			}			else {				trace(code);			}		}				public function recordVideoClip():void {			//var sr:Screenrecording_VideoOnly = new Screenrecording_VideoOnly();			var sr:Screenrecording_VideoSound = new Screenrecording_VideoSound();						/*var camera:Camera = Camera.getCamera();			var mic:Microphone = Microphone.getMicrophone();			mic.setSilenceLevel(0);						try {				ns.attachCamera(camera);				mic.rate = 22;				//ns.attachAudio(mic);				ns.publish(getDate(), 'record');				trace("publishing");			} catch(e:Error) { 				trace("error: " + e.toString());			}*/						/*startTime = getTimer();			trace("start");			var camera:Camera = Camera.getCamera();			video = new Video(camera.width, camera.height);            video.attachCamera(camera);			var date:String = getDate();			var directory:File = File.desktopDirectory.resolvePath("Photo Booth/videos");			if (!directory.exists) {				directory.createDirectory();			}			var file:File = directory.resolvePath(date + ".flv");						flvWriter = SimpleFlvWriter.getInstance();			flvWriter.createFile(file, 320, 240, 10, 5);			bitmapDataArray = new Array();			saveFrame();			recordInterval = setInterval(saveFrame, 100);*/		}				private function saveFrame():void {			trace("save frame " + getTimer());			var bitmapData:BitmapData = new BitmapData(320, 240);			bitmapData.draw(video);			bitmapDataArray.push(bitmapData);			//flvWriter.saveFrame(bitmapData);			if (getTimer() - startTime > 5000) {				clearInterval(recordInterval);				for (var i:Number = 0; i < bitmapDataArray.length; i++) {					flvWriter.saveFrame(bitmapDataArray[i]);				}				flvWriter.closeFile();				trace("stop");			}		}				private function getDate():String {			var date:Date = new Date();			var year:String = addLeadingZeros(date.getFullYear().toString().substring(2));			var month:String = addLeadingZeros((date.getMonth()+1).toString());			var day:String = addLeadingZeros(date.getDate().toString());			var hours:String = addLeadingZeros(date.getHours().toString());			var minutes:String = addLeadingZeros(date.getMinutes().toString());			var seconds:String = addLeadingZeros(date.getSeconds().toString());						return year + month + day + hours + minutes + seconds;		}				private function addLeadingZeros(string:String):String {			if (string.length == 1) {				string = "0" + string;			}			return string;		}	}}